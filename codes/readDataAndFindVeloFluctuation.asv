function [qMinusQbar_noCsYet ]= readDataAndFindVeloFluctuation()
[ntimesteps ,~ ,~, ~ ,ncs ,~ ,~, ~ ,~, ~]=constants();
%sprintf('%s',"initData..")
  %[myPreFft]=initData2("myPreFftDrawCircle"); % for drawing circles
  [avgPreFft]=initData2("avgPreFft"); % initialize avg struct
  [qMinusQbar]=initData2("qMinusQbar"); % initialize avg struct

  [qMinusQbar_noCsYet]=initData2("qMinusQbar_noCsYet"); % initialize avg struct

for c = 1:ncs  % crosssection
[myPreFft_noCsYet]=initData2("myPreFft_noCsYet");
[myPreFft_noCsNoTimeYet]=initData2("myPreFft_noCsNoTimeYet");

parfor t = 1:ntimesteps % time
M_mat=zeros(540,540);
bigCLoopTic = tic;
%myPreFft_noCsYet(t).circle=readCircles2(t,c);
myPreFft_noCsNoTimeYet=readCircles2(t,c);
%M_mat=readCircles2(t,c);
myPreFft_noCsYet(t).circle=myPreFft_noCsNoTimeYet;

sprintf('%s','pause')
%myPreFft_noCsNoTimeYet
%myPreFft_noCsYet(t)=myPreFft_noCsNoTimeYet
end %t >-
%end %c

% compute average for each cross section.
[avgPreFft_noCsYet]=initData2("avgPreFft_noCsYet"); % initialize avg struct

for t = 1:ntimesteps % time
[avgPreFft_noCsYet]=findQbar(t,c,myPreFft_noCsYet,avgPreFft_noCsYet); % find temporal average.
end %t
sprintf('%s','initialize QminusQbar for lot of timestep.')
%initTic = tic;

%findqminusqbarTic = tic;
%sprintf('%s','findqminusqbar')
[qMinusQbar_noCsYet]=initData2("qMinusQbar_noCsYet");
%for c = 1:ncs  % crosssection
parfor t = 1:ntimesteps % time
  %[ qMinusQbar ]=FindqMinusQbar(t,c,myPreFft,avgPreFft,qMinusQbar,"efficient");
    [ qMinusQbar_noCsYet(t) ]=FindqMinusQbar(t,c,myPreFft_noCsYet(t),avgPreFft_noCsYet,qMinusQbar_noCsYet(t),"efficient");
end %t
%end %c
%elapse = ["minutes elapsed" num2str(toc(findqminusqbarTic)/60)]

end % f
